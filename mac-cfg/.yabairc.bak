#!/usr/bin/env bash

set -x

# ====== Variables =============================

declare -A gaps
declare -A color

gaps["top"]="20"
gaps["bottom"]="20"
gaps["left"]="20"
gaps["right"]="20"
gaps["inner"]="20"

color["focused"]="0xFFFFFF00"
color["normal"]="0xFF000000"
color["preselect"]="0xE02d74da"

# Uncomment to refresh ubersicht widget on workspace change
# Make sure to replace WIDGET NAME for the name of the ubersicht widget
#ubersicht_spaces_refresh_command="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"WIDGET NAME\"'"

# ===== Loading Scripting Additions ============

# See: https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#macos-big-sur---automatically-load-scripting-addition-on-startup
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# ===== Tiling setting =========================

yabai -m config layout                      bsp
yabai -m config top_padding                  1
yabai -m config bottom_padding               1
yabai -m config left_padding                 1
yabai -m config right_padding                1
yabai -m config window_gap                   1
yabai -m config external_bar                 all:0:0

yabai -m config mouse_follows_focus         on
yabai -m config focus_follows_mouse         off

yabai -m config window_topmost              off
yabai -m config window_opacity              off
yabai -m config window_shadow               float

yabai -m config window_border               off
yabai -m config window_border_width         4
yabai -m config active_window_border_color  "${color["focused"]}"
yabai -m config normal_window_border_color  "${color["normal"]}"
yabai -m config insert_feedback_color       "${color["preselect"]}"

yabai -m config active_window_opacity       1.0
yabai -m config normal_window_opacity       0.90
yabai -m config split_ratio                 0.50

yabai -m config auto_balance                off

yabai -m config mouse_modifier              fn
yabai -m config mouse_action1               move
yabai -m config mouse_action2               resize

# ===== Rules ==================================

yabai -m rule --add title="WakeUpTime" manage=off
yabai -m rule --add title=".*DreamBot.*" manage=off
yabai -m rule --add app="^UTM |.*" manage=off
yabai -m rule --add app=".*DreamBot.*" manage=off
yabai -m rule --add title=".*RUST GAME DEV.*" manage=off
yabai -m rule --add label="Terraria" app="^Terraria$" manage=off
yabai -m rule --add label="Steam" app="^Steam$" manage=off
yabai -m rule --add label="Karabiner-Elements" app="^Karabiner-Elements$" manage=off
yabai -m rule --add label="Finder" app="^Finder$" manage=off
yabai -m rule --add label="VLC" app="^VLC$" manage=off
# yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="macfeh" app="^macfeh$" manage=off
yabai -m rule --add label="System Preferences" app="^System Preferences$" title=".*" manage=off
yabai -m rule --add label="App Store" app="^App Store$" manage=off
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
yabai -m rule --add label="KeePassXC" app="^KeePassXC$" manage=off
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="mpv" app="^mpv$" manage=off
yabai -m rule --add label="Software Update" title="Software Update" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off

# ===== Signals ================================

yabai -m signal --add event=application_front_switched action="${ubersicht_spaces_refresh_command}"
yabai -m signal --add event=display_changed action="${ubersicht_spaces_refresh_command}"
yabai -m signal --add event=space_changed action="${ubersicht_spaces_refresh_command}"
yabai -m signal --add event=window_created action="${ubersicht_spaces_refresh_command}"
yabai -m signal --add event=window_destroyed action="${ubersicht_spaces_refresh_command}"
yabai -m signal --add event=window_focused action="${ubersicht_spaces_refresh_command}"
yabai -m signal --add event=window_title_changed action="${ubersicht_spaces_refresh_command}"

set +x
printf "yabai: configuration loaded...\\n"

# kill any existing limelight process if one exists, before we launch a new one
killall limelight &> /dev/null
# /usr/local/bin/limelight --config /Users/geoboom/.config/limelight/limelightrc &> /dev/null &
# /usr/local/bin/limelight --config /Users/geoboom/.config/limelight/limelightrc &> /Users/geoboom/limelight.log &
/usr/local/bin/limelight -V &> /Users/geoboom/limelight.log &

